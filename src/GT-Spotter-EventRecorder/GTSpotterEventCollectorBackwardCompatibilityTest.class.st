Class {
	#name : #GTSpotterEventCollectorBackwardCompatibilityTest,
	#superclass : #TestCase,
	#instVars : [
		'unpacking',
		'checkedEvents'
	],
	#category : #'GT-Spotter-EventRecorder-Tests'
}

{ #category : #serializing }
GTSpotterEventCollectorBackwardCompatibilityTest class >> instancesForAllEvents [
	"It instantiates all Spotter events and set all instance variables."
	^ GTSpotterRecorderEvent allSubclasses collect: [ :eachEventClass | | instance |
		instance := eachEventClass new.
		1 to: eachEventClass instSize do: [ :index |
			(instance instVarAt: index) ifNil: [ | variableName |
				variableName := eachEventClass instVarNameForIndex: index.
				(instance respondsTo: variableName) ifTrue: [ instance perform: variableName ] ].
			(instance instVarAt: index) ifNil: [ 
				instance instVarAt: index put: #value ] ].
		instance
	 ]
]

{ #category : #serializing }
GTSpotterEventCollectorBackwardCompatibilityTest class >> serializeAnnouncementWithAllEventsUsing: aGTEventPacking [
	"self serializeAnnouncementWithAllEventsUsing: GTEventPacking default"
	| collector |
	collector := GTSpotterEventCollector new.
	self instancesForAllEvents do: [ :eachEvent | collector add: eachEvent ].
	^ (aGTEventPacking pack: collector) data asByteArray.
]

{ #category : #serializing }
GTSpotterEventCollectorBackwardCompatibilityTest class >> storeSerializedAnnouncement [
	"self storeSerializedAnnouncement"
	GTEventPacking all do: [ :eachEventPacking | | versionString |
		versionString := Symbol streamContents: [ :aStream |
			aStream 
				nextPutAll: #version;
				print: eachEventPacking version;
				nextPutAll: eachEventPacking technologyName ].
		self storeSerializedAnnouncementIntoMethod: versionString using: eachEventPacking  ]
]

{ #category : #serializing }
GTSpotterEventCollectorBackwardCompatibilityTest class >> storeSerializedAnnouncementIntoMethod: aSymbol using: aGTEventRecorder [
	"self storeSerializedAnnouncementIntoMethod: #version3 using: GTEventRecorder default."
	| methodSource |
	methodSource := (String streamContents: [ :aStream |
		aStream 
			nextPutAll: aSymbol asString; cr; 
			tab; 
			nextPutAll: '"Automatically created by class method #storeSerializedAnnouncementIntoMethod: ';
			print: aSymbol;
			nextPutAll: ' using: aGTEventRecorder ';
			nextPutAll: aGTEventRecorder technologyName;
			nextPut: $.;
			cr; tab;
			nextPutAll: 'It is a serialized instance of GTEventAnnouncement.';
			cr; tab;
			nextPutAll: 'It contains all instances of the Spotter recorder events."';
			cr; tab;
			nextPutAll: '<spotterEventRecorderSerializedData>';
			cr; tab;
			nextPutAll: '^ '.
		(self serializeAnnouncementWithAllEventsUsing: aGTEventRecorder) storeOn: aStream. ]).
	self compile: methodSource classified: 'serialized data'.
]

{ #category : #accessing }
GTSpotterEventCollectorBackwardCompatibilityTest >> allPragmaVersions [
	^ Pragma allNamed: #spotterEventRecorderSerializedData in: self class.
]

{ #category : #asserting }
GTSpotterEventCollectorBackwardCompatibilityTest >> assertAnnouncement: announcement [
	self assert: announcement notNil.
	self assert: (announcement isKindOf: GTEventAnnouncement).
	announcement unpackedData do: [ :eachEvent |
		"Check that all instance variables have some value."
		1 to: eachEvent class instSize do: [ :index |
			self 
				assert: (eachEvent instVarAt: index) notNil 
				description: [ String streamContents: [ :aStream |
						aStream 
							nextPutAll: 'Instance variable called ';
							print: (eachEvent class instVarNameForIndex: index);
							nextPutAll: ' of instance ';
							nextPutAll: eachEvent className;
							nextPutAll: ' is nil.' ] ]
		]
	]
]

{ #category : #asserting }
GTSpotterEventCollectorBackwardCompatibilityTest >> assertVersion: aMethodName [
	| announcement |
	announcement := unpacking unpack: (self perform: aMethodName).
	self assertAnnouncement: announcement.
	checkedEvents addAll: (announcement unpackedData collect: #class).
]

{ #category : #accessing }
GTSpotterEventCollectorBackwardCompatibilityTest >> materializePragmaVersion: aPragma [
	^ unpacking unpack: (self perform: aPragma selector).
]

{ #category : #running }
GTSpotterEventCollectorBackwardCompatibilityTest >> setUp [
	super setUp.
	unpacking := GTEventUnpacking default.
]

{ #category : #tests }
GTSpotterEventCollectorBackwardCompatibilityTest >> testDateAndTime [
	self versionsDo: [ :announcement :version |
		announcement unpackedData do: [ :eachEvent | | dateAndTime |
			dateAndTime := eachEvent dateAndTime.
			self assert: dateAndTime class equals: DateAndTime ] ]
]

{ #category : #tests }
GTSpotterEventCollectorBackwardCompatibilityTest >> testMaterializeVersions [
	| versions notMaterializedEvents |
	checkedEvents := Set new.
	versions := self allPragmaVersions.
	self assert: versions notEmpty.
	versions do: [ :eachPragma |
		self assertVersion: eachPragma selector ].
	self assert: checkedEvents notEmpty.
	notMaterializedEvents := GTSpotterRecorderEvent allSubclasses 
		removeAll: checkedEvents; 
		yourself.
	self 
		assert: notMaterializedEvents isEmpty
		description: [ 
			'Some events are not tested for backward compatibility.', String cr,
			'You should create new version using method #storeSerializedAnnouncementIntoMethod:.', String cr,
			'Do not override the existing serialized versions!'
		]
]

{ #category : #'serialized data' }
GTSpotterEventCollectorBackwardCompatibilityTest >> version1 [
	"Automatically created by class method #storeSerializedAnnouncementIntoMethod: #version1.
	It is a serialized event recorder announcement GTSpotterRecorderDataAnnouncement.
	It contains all instances of the recorder events."
	<spotterEventRecorderSerializedData>
	^ #[31 139 8 0 0 0 0 0 0 0 115 11 117 245 97 56 196 200 192 192 192 207 0 1 236 34 110 62 238 57 249 73 137 57 206 57 137 197 197 206 57 165 197 37 169 69 64 9 86 14 55 31 143 212 196 148 212 34 33 207 148 212 188 146 204 146 74 151 204 228 146 204 252 188 196 162 74 46 167 202 146 212 224 202 220 164 252 28 65 255 34 160 154 212 20 231 252 156 156 84 176 60 127 104 94 74 106 90 102 94 106 138 127 82 22 80 72 206 205 39 32 191 56 179 36 179 44 213 34 56 55 49 39 199 51 175 36 53 61 181 8 97 23 19 3 163 24 208 182 252 252 236 128 162 204 92 176 74 132 36 35 51 127 81 106 114 62 200 150 176 212 162 98 160 5 120 212 178 2 189 227 150 89 1 179 26 73 134 145 69 178 160 40 213 55 17 200 205 76 204 201 172 74 4 57 213 17 236 224 98 193 196 148 148 76 176 215 114 32 250 138 165 10 242 139 75 176 43 230 207 69 21 150 117 243 65 4 12 34 20 144 172 102 2 17 146 110 62 193 153 185 5 57 169 216 148 48 177 64 163 131 129 135 155 151 19 164 156 131 29 38 194 5 196 146 48 54 174 216 98 227 4 197 136 99 81 81 34 52 110 74 138 50 243 210 145 162 137 219 5 232 106 199 188 148 144 204 220 84 69 247 144 224 130 252 18 160 206 32 104 192 2 37 19 29 243 242 242 75 243 146 83 115 129 145 205 133 240 145 60 34 246 12 205 176 71 31 227 188 62 220 81 194 196 196 17 144 145 88 148 111 162 103 160 98 106 145 98 98 148 146 104 166 155 108 105 105 172 107 146 152 98 168 107 97 102 100 162 107 154 150 98 102 100 97 110 105 108 102 104 64 68 106 97 228 192 99 29 11 131 106 157 148 252 233 59 27 24 246 6 255 191 122 1 28 108 64 17 163 61 42 55 24 214 231 67 69 112 235 231 96 230 204 204 77 76 79 245 72 44 206 96 73 1 6 139 112 113 106 49 40 209 57 23 165 130 163 27 20 128 60 201 249 185 5 165 64 13 161 161 158 46 156 37 64 145 226 146 196 220 2 145 212 50 96 216 5 161 38 86 158 28 96 192 23 151 132 22 0 13 75 229 1 155 13 149 65 10 89 99 35 28 33 203 186 213 79 71 216 205 7 20 143 152 41 26 232 219 38 249 110 14 104 218 152 58 37 55 252 178 129 200 241 221 59 185 122 30 205 8 19 17 16 112 172 113 99 149 255 160 58 77 180 204 207 246 113 192 135 218 109 113 17 38 190 89 147 248 158 29 255 172 252 147 211 103 247 217 115 165 115 85 159 111 137 46 174 255 121 255 78 245 228 236 249 87 101 222 134 59 94 222 210 117 77 58 120 217 91 25 161 107 46 71 148 60 56 186 91 156 152 194 217 106 111 149 245 49 84 30 200 191 110 187 64 232 244 59 198 60 207 51 26 143 238 126 122 190 142 101 251 107 115 201 149 102 59 146 14 108 150 80 20 184 173 157 126 165 185 216 231 96 182 201 254 149 43 67 111 91 166 49 121 223 105 180 189 238 222 114 101 101 11 247 131 206 245 139 194 34 2 238 73 252 174 59 179 81 126 114 231 198 130 197 135 22 30 85 210 143 111 228 126 154 192 180 122 117 65 78 141 105 129 109 138 230 20 49 102 190 248 9 191 142 116 60 152 175 113 235 85 221 158 196 64 215 121 237 143 47 120 228 207 141 224 154 49 225 241 195 174 255 239 191 116 189 85 233 244 220 100 240 100 151 196 94 177 220 227 71 235 28 18 100 130 116 190 158 94 40 185 185 216 88 208 206 214 116 134 230 234 229 247 254 215 171 175 142 250 60 187 125 121 222 129 37 191 172 94 170 159 78 210 58 27 126 41 75 185 138 49 110 237 226 172 25 109 124 33 191 94 93 9 18 140 53 184 215 187 112 225 173 105 147 15 92 74 189 119 66 96 181 224 135 169 62 107 182 206 75 234 219 192 126 92 198 74 66 47 57 41 117 141 151 242 153 168 247 219 110 62 253 80 117 215 205 229 64 217 172 230 140 217 89 251 59 170 110 4 127 228 125 158 168 61 119 77 29 27 219 105 163 13 183 68 167 253 158 178 105 194 182 73 10 211 131 34 148 25 102 77 44 16 23 200 223 154 235 179 49 227 251 93 157 229 10 165 151 164 108 27 57 221 247 206 121 30 39 57 249 221 212 123 142 42 45 91 93 210 202 211 247 244 21 110 251 115 123 239 185 201 181 220 95 37 59 107 5 132 126 58 114 94 46 78 75 40 20 50 239 214 152 59 53 236 196 206 95 182 161 207 183 173 235 249 236 24 146 41 214 117 208 101 89 222 70 139 69 179 61 239 157 241 245 123 170 182 188 120 178 241 206 147 55 239 164 44 53 113 122 101 239 20 96 107 245 96 13 171 147 129 158 209 244 115 79 203 138 180 205 51 123 242 210 215 93 221 31 195 151 197 100 184 224 186 188 78 105 103 202 178 19 127 86 236 254 95 22 249 56 159 251 172 181 90 217 147 38 185 204 117 111 195 124 139 31 30 254 116 124 234 219 171 123 217 223 191 223 91 189 35 121 150 247 250 119 251 118 254 191 102 34 30 159 125 93 254 216 105 241 215 253 102 114 246 183 107 254 125 57 121 109 185 125 101 228 132 199 19 128 165 20 206 18 151 149 145 43 5 94 140 16 46 37 217 64 185 15 84 208 113 136 114 8 114 10 240 10 115 9 241 240 137 241 139 139 176 75 0 0 84 138 255 137 183 6 0 0]
]

{ #category : #'serialized data' }
GTSpotterEventCollectorBackwardCompatibilityTest >> version2 [
	"Automatically created by class method #storeSerializedAnnouncementIntoMethod: #version2.
	It is a serialized event recorder announcement GTSpotterRecorderDataAnnouncement.
	It contains all instances of the recorder events."
	<spotterEventRecorderSerializedData>
	^ #[31 139 8 0 0 0 0 0 0 0 115 11 117 245 97 56 196 200 192 192 192 207 0 1 236 34 110 62 238 57 249 73 137 57 206 57 137 197 197 206 57 165 197 37 169 69 64 9 86 14 55 31 143 212 196 148 212 34 33 207 148 212 188 146 204 146 74 151 204 228 146 204 252 188 196 162 74 46 167 202 146 212 224 202 220 164 252 28 65 255 34 160 154 212 20 231 252 156 156 84 176 60 127 104 94 74 106 90 102 94 106 138 127 82 22 80 72 206 205 39 32 191 56 179 36 179 44 213 34 56 55 49 39 199 51 175 36 53 61 181 8 97 23 51 3 35 147 24 208 186 252 252 236 128 162 204 92 176 82 132 44 35 51 127 81 106 114 62 200 154 176 212 162 98 160 13 120 212 178 2 253 227 150 89 1 179 27 73 134 145 69 178 160 40 213 55 17 200 205 76 204 201 172 74 4 185 213 17 236 226 98 193 196 148 148 76 176 223 114 32 250 138 165 10 242 139 75 176 43 230 207 69 21 150 117 243 65 132 12 34 24 144 172 102 2 17 146 110 62 193 153 185 5 57 169 216 148 48 177 64 227 131 129 151 135 143 11 164 156 147 3 38 194 13 196 146 80 54 23 174 232 98 227 4 69 137 99 81 81 34 52 114 74 138 50 243 210 145 226 137 219 5 232 106 199 188 148 144 204 220 84 69 247 144 224 130 252 18 160 206 32 104 192 2 37 19 29 243 242 242 75 243 146 83 115 129 177 205 133 240 145 60 34 250 12 205 176 199 31 227 188 41 184 163 132 137 73 197 212 34 197 196 40 37 209 76 55 217 210 210 88 215 36 49 197 80 215 194 204 200 68 215 52 45 197 204 200 194 220 210 216 204 208 128 35 32 35 177 40 223 68 207 128 112 114 97 226 192 147 90 128 33 169 90 167 108 154 114 107 2 195 150 245 255 175 94 0 7 27 80 68 50 55 170 131 97 109 25 84 4 183 126 14 102 206 204 220 196 244 84 143 196 226 12 150 20 96 176 8 23 167 22 131 18 157 115 81 42 56 186 65 1 200 147 156 159 91 80 10 212 16 26 234 233 194 89 2 20 41 46 73 204 45 16 73 45 3 134 93 16 106 98 229 201 1 6 124 113 73 104 1 208 176 84 30 176 217 80 25 164 144 53 54 194 17 178 172 91 253 116 132 221 124 64 241 136 153 162 129 190 125 38 223 13 75 40 83 67 125 131 133 13 37 238 77 91 231 16 169 241 212 155 177 112 77 77 71 124 71 87 211 188 35 151 90 173 74 79 5 124 152 87 22 159 97 50 123 205 201 109 1 252 114 50 252 247 246 252 146 183 169 184 32 121 92 114 191 127 220 156 143 139 246 31 94 108 126 54 47 58 106 123 78 164 241 229 187 239 38 171 159 159 188 39 255 147 219 125 175 212 41 250 138 174 129 73 94 91 75 249 94 206 12 61 244 169 67 133 83 72 201 211 235 16 155 158 245 21 61 219 205 108 39 24 236 38 152 53 220 186 177 110 205 131 166 94 73 215 61 66 123 67 55 42 134 27 126 238 57 178 57 166 232 128 135 145 211 129 183 253 185 129 204 219 12 89 149 103 239 87 95 40 92 149 54 151 51 231 177 145 206 83 31 23 143 89 183 54 48 239 121 120 117 97 203 33 229 75 125 27 127 191 150 153 173 183 245 162 244 171 142 66 13 131 227 207 244 10 20 101 111 21 132 238 148 147 125 127 117 239 236 42 167 137 129 221 135 101 85 236 13 149 126 40 22 61 219 245 230 92 196 145 137 137 9 229 185 75 172 252 122 34 125 110 176 79 78 126 182 255 67 203 188 76 151 101 130 109 106 175 55 124 150 184 106 108 153 19 197 194 183 168 69 121 107 141 198 222 168 248 43 11 203 203 175 78 148 251 185 59 246 183 253 139 233 235 126 92 121 149 118 46 105 219 159 91 43 88 181 79 166 204 249 254 38 69 240 162 172 65 80 234 204 35 97 151 186 120 226 103 169 61 237 42 147 88 191 99 201 178 39 110 210 220 217 103 63 47 233 143 232 106 208 76 141 89 235 194 157 206 43 189 225 220 194 158 196 235 169 95 214 120 188 79 205 202 73 18 86 227 11 57 51 237 207 150 34 215 109 183 215 44 125 213 193 49 35 251 105 163 113 170 101 185 11 111 142 199 254 103 51 206 108 97 91 39 214 251 203 64 62 42 139 255 246 233 41 155 132 116 77 196 108 174 57 157 142 114 168 109 154 207 124 132 219 85 54 88 167 203 116 246 71 177 73 119 74 111 174 106 248 191 237 250 174 41 47 221 39 115 191 23 159 167 189 62 254 223 207 143 119 239 106 243 125 122 117 116 15 251 79 131 138 203 221 54 149 175 28 237 254 198 124 86 152 47 94 95 57 241 248 102 185 39 143 11 246 139 87 86 95 106 222 243 243 219 213 215 95 223 108 103 175 84 191 255 219 99 246 226 123 197 21 137 156 218 81 187 119 45 154 38 168 217 88 127 52 96 119 238 78 237 214 94 31 237 166 151 102 151 55 220 40 208 158 61 249 93 196 194 35 59 107 242 79 25 79 155 54 247 239 180 205 194 145 158 87 24 227 239 22 220 88 252 250 180 141 208 140 155 146 51 110 202 206 144 228 61 115 133 201 248 183 178 220 178 95 11 88 62 57 109 180 208 110 16 232 225 190 191 176 182 209 55 169 113 230 222 123 47 191 136 101 181 219 55 127 114 48 89 113 109 211 18 155 39 219 214 123 220 201 46 127 209 187 224 237 244 223 11 214 190 125 43 24 36 123 182 243 168 112 231 145 3 151 46 124 221 248 243 225 206 100 110 247 245 61 49 126 42 110 250 114 251 77 234 116 39 74 236 89 245 167 254 178 222 28 123 83 75 211 226 178 95 119 102 222 188 108 254 143 233 208 207 45 89 182 192 4 142 179 84 103 101 228 74 129 23 85 132 75 98 54 80 14 7 21 166 28 162 156 130 28 2 188 194 220 66 60 124 98 252 226 34 236 18 0 254 125 218 6 28 7 0 0]
]

{ #category : #'serialized data' }
GTSpotterEventCollectorBackwardCompatibilityTest >> version3fuel [
	"Automatically created by class method #storeSerializedAnnouncementIntoMethod: #version3fuel using: aGTEventRecorder fuel.
	It is a serialized instance of GTEventAnnouncement.
	It contains all instances of the Spotter recorder events."
	<spotterEventRecorderSerializedData>
	^ #[31 139 8 0 0 0 0 0 0 0 115 11 117 245 97 56 196 200 192 192 192 207 0 1 236 34 110 62 238 57 249 73 137 57 206 57 137 197 197 206 57 165 197 37 169 69 64 9 86 14 55 31 143 212 196 148 212 34 33 207 148 212 188 146 204 146 74 151 204 228 146 204 252 188 196 162 74 46 167 202 146 212 224 202 220 164 252 28 65 255 34 160 154 212 20 231 252 156 156 84 176 60 127 104 94 74 106 90 102 94 106 138 127 82 22 80 72 206 205 39 32 191 56 179 36 179 44 213 34 56 55 49 39 199 51 175 36 53 61 181 8 97 23 51 3 35 179 24 208 186 252 252 236 128 162 204 92 176 82 132 44 35 51 127 81 106 114 62 200 154 176 212 162 98 160 13 120 212 178 2 253 227 150 89 1 179 27 73 134 145 69 178 160 40 213 55 17 200 205 76 204 201 172 74 4 185 213 17 236 226 98 193 196 148 148 76 176 223 114 32 250 138 165 10 242 139 75 176 43 230 207 69 21 150 117 243 65 132 12 34 24 144 172 102 2 17 146 110 62 193 153 185 5 57 169 216 148 48 177 64 227 131 129 151 135 143 11 164 156 147 3 38 194 13 196 114 48 54 174 232 98 23 118 15 113 45 3 198 147 99 94 94 126 105 94 114 106 46 144 205 9 138 38 199 162 162 68 104 132 149 20 101 230 165 35 197 29 183 11 208 39 142 121 41 33 153 185 169 92 8 63 176 132 134 122 186 200 35 98 205 208 12 123 180 49 30 229 193 29 19 76 204 28 1 25 137 69 249 166 122 6 42 166 22 41 38 70 41 137 102 186 201 150 150 198 186 38 137 41 134 186 22 102 70 38 186 166 105 41 102 70 22 230 150 198 102 134 6 184 77 226 102 225 117 15 113 43 77 205 9 72 76 206 6 122 128 167 24 26 250 169 41 78 149 60 153 185 137 233 169 208 116 33 146 10 10 129 32 212 196 194 147 156 159 91 80 10 52 10 228 43 206 18 160 87 139 75 18 115 11 88 82 18 75 18 121 114 128 1 80 92 18 90 0 228 164 114 23 167 22 131 52 128 212 9 67 217 206 69 169 224 56 6 133 16 39 216 42 143 196 226 12 60 190 102 101 80 173 251 167 174 90 195 192 168 117 233 255 213 11 224 72 3 138 112 95 62 233 193 168 211 10 21 33 156 35 152 184 152 145 34 192 216 8 71 4 112 118 238 97 22 118 243 1 197 40 70 122 103 7 18 2 73 29 13 139 30 159 245 152 62 247 206 241 111 143 5 119 237 193 165 24 152 66 153 194 229 187 97 105 174 55 196 183 248 146 131 196 61 6 195 167 198 23 202 92 162 86 94 189 52 111 206 199 91 218 108 65 51 61 91 53 175 252 118 218 182 99 215 205 84 51 105 54 153 227 179 203 255 55 135 215 55 164 215 55 62 238 177 63 80 255 208 243 46 203 140 132 140 160 50 181 248 243 191 83 230 127 47 62 251 122 27 235 62 77 6 6 89 157 105 219 242 163 196 91 120 21 13 57 74 98 155 43 214 57 196 72 93 145 189 92 213 184 160 247 71 222 113 183 144 4 195 252 135 19 15 244 56 217 157 183 157 207 125 101 190 181 179 155 86 172 158 229 9 51 9 69 141 13 175 175 95 113 51 159 161 180 219 186 70 121 161 242 229 87 134 226 220 54 174 207 107 217 133 46 45 100 234 21 228 223 122 201 193 243 254 244 162 158 189 111 11 223 176 92 185 176 106 73 105 159 219 153 233 149 173 59 180 69 133 118 172 234 57 126 100 243 212 111 179 92 79 94 81 147 137 117 250 217 169 120 240 253 130 247 217 198 31 110 172 117 184 125 204 49 39 229 227 252 106 131 196 117 59 230 174 177 254 127 184 244 50 151 177 240 178 68 95 171 167 247 179 150 93 61 126 174 101 193 109 141 149 103 54 201 45 136 208 120 90 83 85 150 222 250 228 233 215 156 159 113 93 218 225 138 226 191 38 228 123 178 207 190 34 151 192 46 27 199 243 75 88 77 229 101 214 76 103 73 215 233 219 150 111 90 162 46 189 109 154 79 90 251 54 206 162 37 150 15 174 228 63 45 217 219 250 53 231 112 150 199 75 195 199 159 237 62 37 187 148 241 172 181 61 188 200 83 243 243 11 141 43 183 114 84 175 182 28 113 237 245 21 85 139 206 80 235 185 62 161 111 186 84 182 238 205 142 206 236 167 209 7 250 223 43 234 178 250 217 255 57 249 221 110 250 212 229 242 255 255 253 145 83 185 231 190 43 190 206 125 194 116 251 115 202 30 239 109 59 148 166 31 15 124 114 125 185 198 164 223 82 74 156 119 231 238 173 158 22 228 224 125 67 97 189 159 226 199 128 55 19 150 4 71 42 238 62 38 122 97 102 138 193 222 196 141 103 230 72 37 138 109 168 22 237 217 27 239 95 251 164 80 111 62 115 228 210 62 147 105 79 95 248 26 126 190 35 42 176 123 253 174 173 236 173 107 103 206 92 59 243 187 145 96 90 225 150 28 41 110 62 65 205 5 71 51 36 54 21 186 190 81 139 10 121 119 78 216 41 216 225 144 151 141 165 200 255 57 23 190 60 222 171 254 251 106 214 199 45 69 65 121 83 228 194 87 239 238 119 248 116 73 238 74 118 59 63 127 223 185 127 140 17 220 217 85 34 108 12 12 184 75 100 70 174 20 120 161 67 184 20 5 26 197 192 5 42 8 185 4 101 248 36 121 57 69 165 68 196 120 184 133 56 4 196 133 165 249 185 100 1 29 9 20 37 220 6 0 0]
]

{ #category : #'serialized data' }
GTSpotterEventCollectorBackwardCompatibilityTest >> version3ston [
	"Automatically created by class method #storeSerializedAnnouncementIntoMethod: #version3ston using: aGTEventRecorder ston.
	It is a serialized instance of GTEventAnnouncement.
	It contains all instances of the Spotter recorder events."
	<spotterEventRecorderSerializedData>
	^ #[31 139 8 0 0 0 0 0 0 0 141 85 219 110 211 64 16 125 230 161 255 144 82 170 128 212 68 187 190 172 215 41 8 188 187 118 169 0 53 162 13 60 52 8 28 219 109 163 54 78 149 184 69 80 250 239 216 103 130 38 226 5 20 105 47 158 153 51 51 103 102 39 71 103 233 125 85 55 73 93 47 239 234 162 90 180 231 222 195 206 147 189 114 94 52 243 101 157 175 126 244 70 221 135 246 75 222 228 237 185 63 189 19 66 102 221 170 205 116 214 237 66 252 239 154 132 221 26 123 39 215 176 247 223 0 12 34 11 145 5 176 76 187 53 179 48 196 89 152 184 219 210 0 98 143 172 241 197 0 17 102 177 254 9 177 191 183 63 102 96 233 45 119 1 17 33 2 83 116 155 73 112 129 130 1 132 1 104 146 82 128 236 38 195 234 220 33 54 9 36 53 173 161 236 16 7 190 57 68 150 34 38 3 16 135 136 99 172 46 123 96 79 18 74 150 206 246 25 231 149 200 231 239 32 210 16 5 172 28 91 82 110 160 236 66 198 119 145 121 1 13 113 200 166 26 166 54 32 230 40 85 53 35 102 239 32 34 102 128 179 97 22 134 113 162 78 161 13 127 218 203 168 104 147 15 191 136 162 99 54 19 193 203 147 241 244 41 49 11 142 76 244 30 72 240 39 177 198 1 159 93 240 129 29 185 132 44 14 184 122 46 65 242 177 143 34 58 197 88 54 20 11 98 145 72 142 152 50 163 121 213 238 27 46 150 107 239 244 227 238 231 47 68 253 16 213 76 161 163 21 44 178 104 139 125 130 149 41 74 107 211 30 71 166 131 239 55 151 211 11 10 129 219 223 248 75 242 113 14 172 132 186 117 159 227 54 254 112 112 78 57 35 53 13 167 9 245 42 85 128 120 38 198 144 113 38 41 48 4 65 28 234 75 92 36 115 31 219 9 180 168 102 114 171 77 125 180 164 141 184 151 211 232 21 186 198 90 42 48 80 28 55 152 182 236 208 165 99 176 228 60 126 17 50 166 183 120 193 29 79 85 77 52 165 170 11 116 158 9 54 111 118 118 250 110 171 161 244 21 54 243 21 184 20 189 164 103 111 184 206 148 92 172 152 98 147 205 62 242 19 165 180 19 234 134 108 193 45 76 99 69 83 153 20 103 66 133 179 234 30 23 68 29 17 174 160 119 122 79 173 235 194 243 215 199 212 60 84 118 180 176 8 249 209 209 147 78 146 138 248 181 15 244 154 224 202 109 77 182 237 198 200 182 230 30 77 4 199 3 45 165 122 25 150 254 153 144 253 131 110 206 86 221 60 254 88 21 203 85 89 173 62 85 171 117 59 134 219 185 235 67 56 95 228 151 21 127 236 143 175 242 213 50 28 110 76 33 125 155 175 175 90 145 84 66 120 50 20 17 36 235 106 221 153 216 85 149 119 99 253 108 190 168 90 29 151 55 85 82 151 184 157 247 250 94 203 243 64 202 129 12 207 164 30 201 96 20 234 161 10 85 164 244 64 248 163 54 190 222 151 13 216 106 158 223 204 127 86 165 233 254 29 246 142 206 78 155 101 61 206 139 235 121 125 9 141 155 22 120 221 76 110 219 255 140 206 79 40 130 32 128 160 105 93 173 155 124 113 251 47 239 158 55 146 254 80 120 237 47 250 219 59 82 153 76 142 93 11 130 173 181 86 158 214 90 228 94 229 23 101 160 227 40 46 203 162 136 46 84 229 75 57 203 103 197 31 235 98 185 184 189 107 170 213 198 188 31 234 50 240 202 92 13 138 56 246 7 65 94 202 129 86 94 48 8 47 202 22 50 138 125 37 69 127 231 201 227 206 227 111 112 28 61 92 42 7 0 0]
]

{ #category : #enumerating }
GTSpotterEventCollectorBackwardCompatibilityTest >> versionsDo: aBlock [
	self allPragmaVersions do: [ :eachPragmaVersion | | announcement |
		announcement := self materializePragmaVersion: eachPragmaVersion.
		aBlock cull: announcement cull: eachPragmaVersion selector.
	]
]
